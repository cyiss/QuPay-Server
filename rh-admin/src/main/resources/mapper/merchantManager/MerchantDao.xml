<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ntnikka.modules.merchantManager.dao.MerchantDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.ntnikka.modules.merchantManager.entity.MerchantEntity" id="merchantMap">
        <result property="id" column="id"/>
        <result property="merchantName" column="merchant_name"/>
        <result property="merchantPhone" column="merchant_phone"/>
        <result property="merchantKey" column="merchant_key"/>
        <result property="status" column="status"/>
        <result property="tradeStatus" column="trade_status"/>
        <result property="pid" column="pid"/>
        <result property="storeNumber" column="store_number"/>
        <result property="authCode" column="auth_code"/>
        <result property="appid" column="appid"/>
        <result property="aliPubKey" column="ali_pub_key"/>
        <result property="merchantPubKey" column="merchant_pub_key"/>
        <result property="merchantPriKey" column="merchant_pri_key"/>
        <result property="merchantDeptId" column="merchant_dept_id"/>
    </resultMap>

    <update id="updateTradeStatus" parameterType="map">
        update merchant set
        trade_status = #{tradeStatus}
        where id = #{merchantId}
    </update>

    <update id="updateSettleStatus" parameterType="map">
        update merchant set
        settle_flag = #{settleStatus}
        where id = #{merchantId}
    </update>

    <select id="findByPriKey" parameterType="java.lang.String"
            resultType="com.ntnikka.modules.merchantManager.entity.MerchantEntity">
        SELECT * from merchant where
        merchant_key = #{priKey}
    </select>

    <select id="findById" parameterType="java.lang.Long"
            resultType="com.ntnikka.modules.merchantManager.entity.MerchantEntity">
        select * from merchant
        where id = #{id}
    </select>

    <select id="hasOrder" resultType="com.ntnikka.modules.merchantManager.entity.MerchantEntity">
        SELECT DISTINCT(merchant_dept_id) ,merchant_dept_name
        from merchant where id in
        ( SELECT merchant_id
        from trade_order
        where create_time BETWEEN DATE_ADD(DATE_SUB(CURDATE(),INTERVAL 1 DAY),INTERVAL 0 HOUR)
        and DATE_ADD(DATE_SUB(CURDATE(),INTERVAL 1 DAY),INTERVAL 24 HOUR)
        and status = 1
        GROUP BY merchant_id )
    </select>

    <select id="queryYesterdayOrderList" parameterType="map" resultType="com.ntnikka.modules.orderManager.entity.TradeOrder">
        SELECT
        a.id,
        a.merchant_id AS merchantId,
        a.merchant_name AS merchantName,
        a.pay_type AS payType,
        a.order_id AS orderId,
        a.trade_no AS tradeNo,
        a.sys_trade_no AS sysTradeNo,
        a.order_amount AS orderAmount,
        a.pay_time AS payTime,
        a.notify_status AS notifyStatus
        FROM
        trade_order a
        WHERE
        a.merchant_dept_id = #{deptId}
        AND a. STATUS = 1
        AND a.pay_time between DATE_ADD(DATE_SUB(CURDATE(),INTERVAL 1 DAY),INTERVAL 0 HOUR)
        AND DATE_SUB(DATE_ADD(DATE_SUB(CURDATE(),INTERVAL 1 DAY),INTERVAL 24 HOUR),INTERVAL 1 SECOND)
    </select>

    <update id="updatePolling" parameterType="map">
        update merchant
        set polling_flag = #{flag}
        where id = #{id}
    </update>

    <update id="closeChannel" parameterType="java.lang.Long">
      update merchant_channel
      set flag = 1
      where  id = #{channelId}
    </update>

    <update id="closeTradeFlag" parameterType="Long">
        update merchant
        set trade_status = 1
        where id = #{merchantId}
    </update>
</mapper>